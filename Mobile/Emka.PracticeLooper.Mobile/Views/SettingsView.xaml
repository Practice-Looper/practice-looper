<?xml version="1.0" encoding="UTF-8"?>
<ContentPage
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    x:Class="Emka.PracticeLooper.Mobile.Views.SettingsView"
    xmlns:ios="clr-namespace:Xamarin.Forms.PlatformConfiguration.iOSSpecific;assembly=Xamarin.Forms.Core"
    xmlns:rsrcs="clr-namespace:Emka.PracticeLooper.Mobile"
    xmlns:views="clr-namespace:Emka.PracticeLooper.Mobile.Views"
    Style="{StaticResource PageMainStyle}"
    Title="{x:Static rsrcs:AppResources.SettingsView_Title}"
    ios:Page.UseSafeArea="True">
    <Grid
        Padding="10">
        <Grid.RowDefinitions>
            <RowDefinition
                Height="*" />
            <RowDefinition
                Height="Auto" />
            <RowDefinition
                Height="Auto" />
            <RowDefinition
                Height="Auto" />
        </Grid.RowDefinitions>
        <Label
            Grid.Row="0"
            FontSize="Body"
            Text="{x:Static rsrcs:AppResources.SettingsView_NoUpgradesDescription}"
            IsVisible="False"
            VerticalOptions="Center"
            HorizontalOptions="Center"
            HorizontalTextAlignment="Center"
            TextColor="{DynamicResource SecondaryColor}">
            <Label.Style>
                <Style
                    TargetType="Label">
                    <Style.Triggers>
                        <DataTrigger
                            TargetType="Label"
                            Binding="{Binding HasProducts}"
                            Value="False">
                            <Setter
                                Property="IsVisible"
                                Value="True" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Label.Style>
        </Label>
        <ListView
            x:Name="ProductsListView"
            AutomationId="SettingsListView"
            AutomationProperties.IsInAccessibleTree="False"
            Grid.Row="0"
            ItemsSource="{Binding Products}"
            ItemTapped="ListView_ItemTapped"
            VerticalOptions="Start"
            HorizontalOptions="FillAndExpand">
            <ListView.Header>
                <Label
                    Text="{x:Static rsrcs:AppResources.SettingsView_ListView_Header}"
                    FontSize="Default"
                    TextColor="{DynamicResource SecondaryColor}" />
            </ListView.Header>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <views:CustomViewCell>
                        <Grid
                            VerticalOptions="FillAndExpand"
                            HorizontalOptions="FillAndExpand"
                            BackgroundColor="{DynamicResource BackgroundColor}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition
                                    Width="*" />
                                <ColumnDefinition
                                    Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Label
                                Grid.Column="0"
                                Text="{Binding Name}"
                                AutomationId="ProductName"
                                FontSize="Default"
                                TextColor="{Binding Source={RelativeSource AncestorType={x:Type views:CustomViewCell}}, Path=FontColor}"
                                VerticalTextAlignment="Center"
                                VerticalOptions="Center" />
                            <Label
                                Grid.Column="1"
                                FontSize="Default"
                                AutomationId="ProductPrice"
                                Text="{Binding LocalizedPrice}"
                                TextColor="{Binding Source={RelativeSource AncestorType={x:Type views:CustomViewCell}}, Path=FontColor}"
                                VerticalTextAlignment="Center"
                                VerticalOptions="Center"
                                HorizontalOptions="End">
                                <Label.Style>
                                    <Style
                                        TargetType="Label">
                                        <Setter
                                            Property="IsVisible"
                                            Value="True" />
                                        <Style.Triggers>
                                            <DataTrigger
                                                TargetType="Label"
                                                Binding="{Binding Purchased}"
                                                Value="True">
                                                <Setter
                                                    Property="IsVisible"
                                                    Value="False" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Label.Style>
                            </Label>
                            <Label
                                AutomationId="ProductCheck"
                                Grid.Column="1"
                                FontFamily="{DynamicResource MaterialFontFamily}"
                                Text="{StaticResource Check}"
                                FontSize="24"
                                TextColor="{Binding Source={RelativeSource AncestorType={x:Type views:CustomViewCell}}, Path=FontColor}"
                                VerticalTextAlignment="End"
                                VerticalOptions="Center"
                                IsVisible="{Binding Purchased}">
                            </Label>
                        </Grid>
                    </views:CustomViewCell>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>

        <Grid
            Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Label
                Grid.Row="0"
                Grid.Column="0"
                Text="{x:Static rsrcs:AppResources.SettingsView_DarkMode}"
                HorizontalOptions="Start"
                TextColor="{DynamicResource SecondaryColor}"
                IsVisible="{Binding Path=IsVisible, Source={x:Reference SchemeSwitch}}"
                VerticalTextAlignment="Center" />
            <views:ColorSchemeSwitch
                Grid.Row="0"
                Grid.Column="1"
                AutomationId="SchemeSwitch"
                x:Name="SchemeSwitch"
                OnColor="{DynamicResource SecondaryColor}"
                HorizontalOptions="End"
                VerticalOptions="Center" />
            <Button
                Grid.Row="1"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Text="{x:Static rsrcs:AppResources.SettingsView_PrivacyPolicy}"
                HorizontalOptions="Start"
                BackgroundColor="{DynamicResource BackgroundColor}"
                BorderColor="{DynamicResource BackgroundColor}"
                TextColor="{DynamicResource PrimaryColor}"
                HeightRequest="20"
                Command="{Binding ShowDataPrivacyCommand}"
                Padding="0">
                <Button.HeightRequest>
                    <OnPlatform
                        x:TypeArguments="x:Double">
                        <On
                            Platform="iOS">20</On>
                        <On
                            Platform="Android">40</On>
                    </OnPlatform>
                </Button.HeightRequest>
            </Button>
            <Button
                Grid.Row="2"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Text="{x:Static rsrcs:AppResources.SettingsView_ThirdPartySoftware}"
                HorizontalOptions="Start"
                BackgroundColor="{DynamicResource BackgroundColor}"
                BorderColor="{DynamicResource BackgroundColor}"
                TextColor="{DynamicResource PrimaryColor}"
                HeightRequest="20"
                Command="{Binding ShowThirdPartyComponentsCommand}"
                Padding="0">
                <Button.HeightRequest>
                    <OnPlatform
                        x:TypeArguments="x:Double">
                        <On
                            Platform="iOS">20</On>
                        <On
                            Platform="Android">40</On>
                    </OnPlatform>
                </Button.HeightRequest>
            </Button>
        </Grid>
        <Label
            Grid.Row="2"
            FontSize="Caption"
            Text="{Binding AppVersion, StringFormat={x:Static rsrcs:AppResources.SettingsView_AppVersion}}"
            TextColor="{DynamicResource SecondaryColor}" />
        <ContentView
            Grid.Row="0"
            IsVisible="{Binding IsBusy}"
            VerticalOptions="FillAndExpand"
            HorizontalOptions="FillAndExpand"
            Opacity="0.9"
            BackgroundColor="{DynamicResource BackgroundColor}">
            <ActivityIndicator
                AutomationId="ActivityIndicator"
                IsRunning="{Binding IsBusy}"
                Color="{DynamicResource SecondaryColor}"
                VerticalOptions="Center"
                HorizontalOptions="Center" />
        </ContentView>
    </Grid>
</ContentPage>